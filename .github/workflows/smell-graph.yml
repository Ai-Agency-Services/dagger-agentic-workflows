name: Smell Graph Report

on:
  workflow_dispatch:
    inputs:
      mode:
        description: "Run mode: remote (clone by URL) or attached (use local checkout)"
        required: true
        default: "remote"
      target_repo_url:
        description: "Repository URL to analyze (remote mode)"
        required: false
      target_branch:
        description: "Branch to analyze (remote mode)"
        required: false
        default: "main"
      attached_repository:
        description: "owner/repo to checkout (attached mode)"
        required: false
      attached_ref:
        description: "Branch or SHA to checkout (attached mode)"
        required: false
        default: "main"
      attached_path:
        description: "Path to checkout attached repo"
        required: false
        default: "target-repo"
      post_comment:
        description: "Post PR comment with report (when on pull_request)"
        required: false
        default: "true"
      skip_graph:
        description: "Skip graph build and run smell only (workflow_dispatch only)"
        required: false
        default: "false"

  pull_request:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  smell-graph:
    runs-on: ubuntu-latest
    env:
      DAGGER_NO_NAG: '1'
    steps:
      - name: Checkout this repository (workflow code)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: (Attached mode) Checkout target repository
        if: ${{ inputs.mode == 'attached' }}
        uses: actions/checkout@v4
        with:
          repository: ${{ inputs.attached_repository || format('{0}/{1}', github.repository_owner, github.event.pull_request.head.repo.name) }}
          ref: ${{ inputs.attached_ref || github.event.pull_request.head.ref }}
          path: ${{ inputs.attached_path }}
          token: ${{ secrets.GH_PAT || github.token }}

      - name: Install uv
        run: |
          curl -LsSf https://astral.sh/uv/install.sh | sh
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Install Dagger CLI
        run: |
          curl -L https://dl.dagger.io/dagger/install.sh | DAGGER_VERSION=v0.18.19 sh
          echo "$PWD/bin" >> $GITHUB_PATH

      - name: Verify tools
        run: |
          dagger version
          uv --version

      - name: Build Graph (remote mode)
        if: ${{ inputs.mode != 'attached' && inputs.skip_graph != 'true' }}
        env:
          GH_PAT: ${{ secrets.GH_PAT || github.token }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
          NEO4J_AUTH: ${{ secrets.NEO4J_AUTH }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        working-directory: workflows/graph
        run: |
          echo "CWD=$(pwd)" && ls -la
          test -f "$GITHUB_WORKSPACE/workflows/graph/dagger.json" && echo "Found graph dagger.json" || (echo "Missing graph dagger.json" && exit 1)
          dagger call --cloud --mod $GITHUB_WORKSPACE/workflows/graph \
            --config-file=demo/agencyservices.yaml \
            --neo-data=./tmp/neo4j-data \
            build-graph-for-repository \
            --github-access-token=env:GH_PAT \
            --repository-url="${{ inputs.target_repo_url || github.event.pull_request.head.repo.clone_url }}" \
            --branch="${{ inputs.target_branch || github.event.pull_request.head.ref }}" \
            --neo-password=env:NEO4J_PASSWORD \
            --neo-auth=env:NEO4J_AUTH \
            --open-router-api-key=env:OPENROUTER_API_KEY

          echo "GRAPH_BUILT=1" >> "$GITHUB_ENV"

      - name: Build Graph (attached mode)
        if: ${{ inputs.mode == 'attached' && inputs.skip_graph != 'true' }}
        env:
          GH_PAT: ${{ secrets.GH_PAT || github.token }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
          NEO4J_AUTH: ${{ secrets.NEO4J_AUTH }}
          OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        working-directory: workflows/graph
        run: |
          echo "CWD=$(pwd)" && ls -la
          test -f "$GITHUB_WORKSPACE/workflows/graph/dagger.json" && echo "Found graph dagger.json" || (echo "Missing graph dagger.json" && exit 1)
          dagger call --mod $GITHUB_WORKSPACE/workflows/graph \
            --config-file=demo/agencyservices.yaml \
            --neo-data=./tmp/neo4j-data \
            build-graph-for-directory \
            --github-access-token=env:GH_PAT \
            --local-path="${{ github.workspace }}/${{ inputs.attached_path }}" \
            --neo-password=env:NEO4J_PASSWORD \
            --neo-auth=env:NEO4J_AUTH \
            --open-router-api-key=env:OPENROUTER_API_KEY

          echo "GRAPH_BUILT=1" >> "$GITHUB_ENV"

      - name: Analyze Smells (always-verbose report with links)
        id: smell
        if: ${{ env.GRAPH_BUILT == '1' || inputs.skip_graph == 'true' }}
        env:
          GITHUB_REPO_URL: ${{ inputs.mode == 'remote' && (inputs.target_repo_url || github.event.pull_request.head.repo.html_url) || (format('https://github.com/{0}', inputs.attached_repository) || github.event.pull_request.head.repo.html_url) }}
          GITHUB_BRANCH: ${{ inputs.mode == 'remote' && (inputs.target_branch || github.event.pull_request.head.ref) || (inputs.attached_ref || github.event.pull_request.head.ref) }}
          NEO4J_AUTH: ${{ secrets.NEO4J_AUTH }}
          NEO4J_PASSWORD: ${{ secrets.NEO4J_PASSWORD }}
        working-directory: workflows/smell
        run: |
          echo "CWD=$(pwd)" && ls -la
          test -f "$GITHUB_WORKSPACE/workflows/smell/dagger.json" && echo "Found smell dagger.json" || (echo "Missing smell dagger.json" && exit 1)

          dagger call --cloud --mod $GITHUB_WORKSPACE/workflows/smell \
            --config-file=demo/agencyservices.yaml \
            --neo-data=./tmp/neo4j-data \
            analyze-codebase \
            --github-access-token=env:GH_PAT \
            --neo-password=env:NEO4J_PASSWORD \
            --neo-auth=env:NEO4J_AUTH \
            > smell_report.txt

          # Build a polished HTML report (brand + toggles + metadata)
          awk 'BEGIN{f=0} /ðŸ“š === DETAILED FINDINGS ===/{f=1;next} f{print > "details.txt"; next} {print > "summary.txt"}' smell_report.txt || true

          REPO_URL="${GITHUB_REPO_URL:-N/A}"
          BRANCH="${GITHUB_BRANCH:-N/A}"

          cat > smell_report.html <<EOF
<!doctype html>
<html>
<head>
  <meta charset="utf-8" />
  <title>Code Smell Report</title>
  <meta name="viewport" content="width=device-width,initial-scale=1" />
  <style>
    :root {
      --bg:#0b1020; --panel:#0f172a; --text:#e5e7eb; --muted:#94a3b8; --border:#1f2937; --link:#93c5fd;
    }
    html,body { background:var(--bg); color:var(--text); font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace; }
    body { padding: 24px; line-height: 1.45; }
    h1 { margin: 0 0 12px 0; font-size: 20px; }
    .meta { color: var(--muted); margin: 0 0 16px 0; }
    .badge { display:inline-block; padding: 2px 8px; border-radius: 9999px; border: 1px solid var(--border); color:#e2e8f0; font-size: 12px; margin-right: 8px; }
    details { margin: 10px 0; border: 1px solid var(--border); border-radius: 8px; overflow:hidden; background: var(--panel); }
    summary { cursor:pointer; padding: 10px 14px; font-weight: 600; }
    pre { margin: 0; padding: 14px; background: var(--bg); white-space: pre-wrap; }
    a { color: var(--link); text-decoration: none; }
    a:hover { text-decoration: underline; }
  </style>
</head>
<body>
  <h1>Code Smell Report</h1>
  <div class="meta">Repo: <a href="$REPO_URL">$REPO_URL</a> â€¢ Branch: $BRANCH</div>
  <div class="meta"><span class="badge">Smell Workflow</span><span class="badge">HTML Artifact</span></div>
  <details open>
    <summary>Summary</summary>
    <pre>
EOF
          sed -e 's/&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g' summary.txt 2>/dev/null >> smell_report.html || true
          cat >> smell_report.html <<'EOF'
    </pre>
  </details>
  <details>
    <summary>Detailed Findings</summary>
    <pre>
EOF
          sed -e 's/&/\&amp;/g' -e 's/</\&lt;/g' -e 's/>/\&gt;/g' details.txt 2>/dev/null >> smell_report.html || true
          cat >> smell_report.html <<'EOF'
    </pre>
  </details>
</body>
</html>
EOF

      - name: Upload Smell Report
        uses: actions/upload-artifact@v4
        with:
          name: smell-report
          path: |
            smell_report.txt
            smell_report.html

      - name: Comment on PR with Smell Report
        if: ${{ github.event_name == 'pull_request' && inputs.post_comment == 'true' }}
        uses: actions/github-script@v7
        with:
          script: |
            const runUrl = `${process.env.GITHUB_SERVER_URL}/${process.env.GITHUB_REPOSITORY}/actions/runs/${process.env.GITHUB_RUN_ID}`;
            const body = `### Code Smell Report\n\nA full report (HTML and text) has been uploaded as the workflow artifact \"smell-report\".\n\n- Repo: ${process.env.GITHUB_REPO_URL || 'N/A'}\n- Branch: ${process.env.GITHUB_BRANCH || 'N/A'}\n- Run: ${runUrl}\n\nDownload the artifact from this run to view the report.`;
            github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body,
            });
