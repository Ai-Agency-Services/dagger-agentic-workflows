[project]
name = "dagger-agents"
version = "0.1.0"
description = "AI-powered development automation agents built with Dagger"
requires-python = ">=3.12"
authors = [
    {name = "Dagger Agents Team", email = "dev@example.com"}
]
dependencies = [
    "dagger-io",
    "ais-dagger-agents-config>=0.1.0,<0.2.0",
    "pydantic[email]>=2.11.5",
    "pyyaml>=6.0.2",
]

[project.optional-dependencies]
test = [
    "pytest>=8.0.0",
    "pytest-asyncio>=0.23.0",
    "pytest-mock>=3.12.0",
    "pytest-cov>=5.0.0",
    "pytest-xdist>=3.5.0",
    "pytest-timeout>=2.3.0",
]
dev = [
    "ruff>=0.3.4",
    "mypy>=1.8.0",
    "black>=24.0.0",
]

[build-system]
requires = ["hatchling>=1.25.0"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["services", "workflows", "agents", "shared"]

[tool.pytest.ini_options]
pythonpath = ["."]
testpaths = ["tests/"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--verbose",
    "--tb=short",
    "--cov=.",
    "--cov-report=term-missing",
    "--cov-report=html:htmlcov",
    "--cov-report=xml",
    "--ignore=workflows/cover/src/coverage/",
    "--ignore=shared/dagger-agents-config/sdk/"
]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m not slow')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "neo4j: marks tests that require Neo4j database",
    "llm: marks tests that require LLM API access",
    "dagger: marks tests that require Dagger runtime",
    "graph: marks tests for graph workflow",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
timeout = 300
asyncio_mode = "auto"

[tool.coverage.run]
source = ["services", "workflows", "agents", "shared"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*_test.py",
    "*/conftest.py",
    "*/sdk/*",
    "*/demo/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
]

[tool.ruff]
line-length = 88
target-version = "py312"

[tool.ruff.lint]
select = ["E", "W", "F", "I", "B", "C4", "ARG", "SIM"]
ignore = ["E501", "W503", "E203"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
follow_imports = "normal"
install_types = true
non_interactive = true